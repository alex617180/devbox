# docker-compose.yml
# Используй вместе с .env (но есть дефолты через ${VAR:-...})

services:
  mysql:
    # Надёжная ветка для локалки. Можно поменять на mysql:8.4 без доп. флагов.
    image: mysql:8.4
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      # Не задаём MYSQL_DATABASE/USER/PASSWORD, чтобы не привязывать к одной БД.
      # БД под проекты создавай руками или скриптом (db-ensure).
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -uroot -p$$MYSQL_ROOT_PASSWORD | grep 'mysqld is alive'"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  workspace:
    build:
      context: ./workspace
      args:
        PHP_TAG: "${PHP_TAG:-8.3-cli}"
        NODE_MAJOR: "${NODE_MAJOR:-20}"
    working_dir: /var/www
    volumes:
      # Монтируем ВЕСЬ каталог с проектами (по умолчанию — родительская папка)
      - ${HOST_PROJECTS_DIR:-../}:/var/www
      - composer_cache:/tmp/composer
      - node_cache:/home/dev/.npm
      # Логи процессов (доступны на хосте в ./logs)
      - ./logs:/var/log/devbox
    environment:
      # Удобные дефолты в контейнере (проекты в своих .env ставят DB_HOST=mysql, DB_PORT=3306)
      DB_HOST: mysql
      DB_PORT: 3306

      # Xdebug
      XDEBUG_MODE: ${XDEBUG_MODE:-debug}
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
      PHP_IDE_CONFIG: serverName=php-devbox
    extra_hosts:
      # Чтобы host.docker.internal работал на Linux
      - "host.docker.internal:host-gateway"
    depends_on:
      mysql:
        condition: service_healthy
    # Контейнер «живёт», а процессы (artisan/vite) ты запускаешь из нужной папки
    command: bash -lc 'php -v && node -v && npm -v; tail -f /dev/null'
    user: "${UID:-1000}:${GID:-1000}"
    ports:
      # Фиксированные порты из .env (при отсутствии — дефолты)
      - "${APP_PORT:-8000}:${APP_PORT:-8000}"
      - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
    restart: unless-stopped

volumes:
  mysql_data:
  composer_cache:
  node_cache:
